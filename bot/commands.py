from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.enums import ParseMode
from sqlalchemy.orm import Session
from datetime import datetime, timedelta
import logging
from core.models import User, Expense
from core.db import SessionLocal
from core.llm import get_advice


# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥
router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start:
    - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    - –°–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å—å –≤ –ë–î, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π
    """
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –ë–î
    db = SessionLocal()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        user = db.query(User).filter(User.telegram_id == user_id).first()
        
        if not user:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = User(
                telegram_id=user_id,
                username=username,
                first_name=first_name,
                last_name=last_name
            )
            db.add(user)
            db.commit()
            logging.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer(
            f"üëã –ü—Ä–∏–≤–µ—Ç, {first_name or username or '–¥—Ä—É–≥'}!\n\n"
            f"–Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç. –ü–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –∏ —ç–∫–æ–Ω–æ–º–∏—Ç—å –¥–µ–Ω—å–≥–∏.\n\n"
            f"üßÆ <b>–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞—Ç—É:</b>\n"
            f"‚Ä¢ –ù–∞–ø–∏—à–∏ —Å—É–º–º—É –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –Ω–∞–ø—Ä–∏–º–µ—Ä: <i>-500 –∫–æ—Ñ–µ</i>\n"
            f"‚Ä¢ –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —á–µ–∫–∞, –∏ —è —Ä–∞—Å–ø–æ–∑–Ω–∞—é —Å—É–º–º—É\n\n"
            f"üìä <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
            f"‚Ä¢ /help ‚Äî —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É\n"
            f"‚Ä¢ /summary ‚Äî —Å–≤–æ–¥–∫–∞ –ø–æ —Ç—Ä–∞—Ç–∞–º\n\n"
            f"–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —É—á–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –≤–º–µ—Å—Ç–µ!",
            parse_mode=ParseMode.HTML
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    finally:
        db.close()


@router.message(Command("help"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help"""
    await message.answer(
        "üìù <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:</b>\n\n"
        "üßÆ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤:</b>\n"
        "‚Ä¢ <i>-–°–£–ú–ú–ê –ö–ê–¢–ï–ì–û–†–ò–Ø</i> ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞—Ç—É\n"
        "   –ù–∞–ø—Ä–∏–º–µ—Ä: <i>-150 –∫–æ—Ñ–µ</i> –∏–ª–∏ <i>-2500 –ø—Ä–æ–¥—É–∫—Ç—ã</i>\n"
        "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è\n\n"
        "üìä <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        "‚Ä¢ /summary ‚Äî —Å–≤–æ–¥–∫–∞ –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º –∑–∞ –¥–µ–Ω—å, –Ω–µ–¥–µ–ª—é –∏ –º–µ—Å—è—Ü\n"
        "‚Ä¢ /start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "‚Ä¢ /help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤–∞–º.",
        parse_mode=ParseMode.HTML
    )


@router.message(Command("summary"))
async def cmd_summary(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /summary:
    - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–¥–∫—É –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º –∑–∞ –¥–µ–Ω—å, –Ω–µ–¥–µ–ª—é –∏ –º–µ—Å—è—Ü
    - –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–≤–µ—Ç –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º
    """
    user_id = message.from_user.id
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –ë–î
    db = SessionLocal()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
        user = db.query(User).filter(User.telegram_id == user_id).first()
        
        if not user:
            await message.answer("–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        now = datetime.now()
        today_start = datetime(now.year, now.month, now.day)
        week_start = today_start - timedelta(days=now.weekday())
        month_start = datetime(now.year, now.month, 1)
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
        day_expenses = db.query(Expense).filter(
            Expense.user_id == user.id,
            Expense.created_at >= today_start
        ).all()
        
        week_expenses = db.query(Expense).filter(
            Expense.user_id == user.id,
            Expense.created_at >= week_start
        ).all()
        
        month_expenses = db.query(Expense).filter(
            Expense.user_id == user.id,
            Expense.created_at >= month_start
        ).all()
        
        # –°—á–∏—Ç–∞–µ–º —Å—É–º–º—ã —Ä–∞—Å—Ö–æ–¥–æ–≤
        day_sum = sum(expense.amount for expense in day_expenses)
        week_sum = sum(expense.amount for expense in week_expenses)
        month_sum = sum(expense.amount for expense in month_expenses)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–≤–µ—Ç –æ—Ç LLM
        advice = get_advice(user_id, db)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer(
            f"üìä <b>–°–≤–æ–¥–∫–∞ –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º:</b>\n\n"
            f"–°–µ–≥–æ–¥–Ω—è: <b>{day_sum:.2f} ‚ÇΩ</b>\n"
            f"–ù–µ–¥–µ–ª—è: <b>{week_sum:.2f} ‚ÇΩ</b>\n"
            f"–ú–µ—Å—è—Ü: <b>{month_sum:.2f} ‚ÇΩ</b>\n\n"
            f"üí° <i>{advice}</i>",
            parse_mode=ParseMode.HTML
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /summary: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    finally:
        db.close() 